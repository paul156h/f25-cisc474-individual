// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

enum Role {
  STUDENT
  PROFESSOR
  ADMIN
}

enum AssignmentType {
  QUIZ
  UPLOAD
  PEER
}

model User {
  id         String       @id
  name       String?
  email      String?      @unique
  role       Role
  created_at DateTime
  Course     Course[]
  grades_received Grade[] @relation("studentg")
  grades_given Grade[]    @relation("professorg")
  enrollments Enrollment[]
  submissions Submission[]
  feedback_given Feedback[]     @relation("professorf")
}

model Course {
  id          String       @id
  created_at  DateTime
  name        String?
  description String?
  owner_id    String
  owner       User         @relation(fields: [owner_id], references: [id])
  assignments Assignment[]
  enrollments  Enrollment[]

  @@unique([name, description])
}

model Assignment {
  id           String         @id
  created_at   DateTime
  title        String
  due_by       DateTime
  courses      Course[]
  instructions String
  type         AssignmentType
  submissions  Submission[]

  @@unique([title, due_by])
}

model Submission {
  id            String         @id
  submitted_at  DateTime
  assignment_id String
  assignment    Assignment     @relation(fields: [assignment_id], references: [id])
  content       String
  type          AssignmentType
  owner_id      String
  owner         User           @relation(fields: [owner_id], references: [id])
  feedbacks     Feedback[]
  grades        Grade[]

  @@unique([assignment_id, owner_id])
}

model Grade {
  id            String     @id
  graded_at     DateTime
  submission_id String
  submission    Submission @relation(fields: [submission_id], references: [id])
  score         Float
  feedback      String
  student_id    String
  student       User       @relation("studentg",fields: [student_id], references: [id])
  grader_id     String
  teacher       User       @relation("professorg", fields: [grader_id], references: [id])

  @@unique([submission_id, student_id])
}

model Enrollment {
  id          String   @id
  user_id     String
  user        User     @relation(fields: [user_id], references: [id])
  course_id   String
  course      Course   @relation(fields: [course_id], references: [id])
  user_role   Role
  enrolled_at DateTime

  @@unique([user_id, course_id])
}

model Feedback {
  id            String     @id
  created_at    DateTime
  submission_id String
  submission    Submission @relation(fields: [submission_id], references: [id])
  content       String
  professor_id  String     
  professor     User       @relation("professorf", fields: [professor_id], references: [id])

  @@unique([submission_id, professor_id])
}
